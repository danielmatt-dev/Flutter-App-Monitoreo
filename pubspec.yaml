name: app_plataforma
description: "A new Flutter project."
# The following line prevents the package from being accidentally published to
# pub.dev using `flutter pub publish`. This is preferred for private packages.
publish_to: 'none' # Remove this line if you wish to publish to pub.dev

# The following defines the version and build number for your application.
# A version number is three numbers separated by dots, like 1.2.43
# followed by an optional build number separated by vacio +.
# Both the version and the builder number may be overridden in flutter
# build by specifying --build-name and --build-number, respectively.
# In Android, build-name is used as versionName while build-number used as versionCode.
# Read more about Android versioning at https://developer.android.com/studio/publish/versioning
# In iOS, build-name is used as CFBundleShortVersionString while build-number is used as CFBundleVersion.
# Read more about iOS versioning at
# https://developer.apple.com/library/archive/documentation/General/Reference/InfoPlistKeyReference/Articles/CoreFoundationKeys.html
# In Windows, build-name is used as the major, minor, and patch parts
# of the product and file versions while build-number is used as the build suffix.
version: 1.0.0+1

environment:
  sdk: '>=3.3.4 <4.0.0'

# Dependencies specify other packages that your package needs in order to work.
# To automatically upgrade your package dependencies to the latest versions
# consider running `flutter pub upgrade --major-versions`. Alternatively,
# dependencies can be manually updated by changing the version numbers below to
# the latest version available on pub.dev. To see which dependencies have newer
# versions available, run `flutter pub outdated`.
dependencies:
  flutter:
    sdk: flutter

  flutter_localizations:
    sdk: flutter

  connectivity_plus: ^3.0.6

  # The following adds the Cupertino Icons font to your application.
  # Use with the CupertinoIcons class for iOS style icons.
  cupertino_icons: ^1.0.6

  # Calendario #
  table_calendar: ^3.0.9
  # Permite agregar un widget de calendario personalizable en tu aplicación.

  # Texto responsive #
  auto_size_text: ^3.0.0
  # Ajusta automáticamente el tamaño del texto para que se ajuste a su contenedor.

  # Localizaciones #
  syncfusion_localizations: ^26.2.7
  # Proporciona soporte de localización para los asas de Syncfusion.

  # Gráfico del promedio #
  percent_indicator: ^4.2.3
  # Proporciona asas para mostrar indicadores de porcentaje circulares y lineales.

  # Soporte para internacionalización y localización #
  intl: ^0.19.0
  # Proporciona soporte para la internacionalización y localización de tu aplicación.

  # Programación funcional en Dart #
  dartz: ^0.10.1
  # Biblioteca de programación funcional en Dart, incluye tipos como Either y Option.

  # Cliente HTTP potente #
  dio: ^5.4.3+1
  # Cliente HTTP para Dart y Flutter, similar a Retrofit.

  # Anotaciones para JSON serialización/deserialización #
  json_annotation: ^4.9.0
  # Proporciona anotaciones para facilitar la serialización y deserialización de JSON.

  # Generación de código inteligente para mappings #
  smartstruct: ^1.4.0
  # Biblioteca para generar automáticamente código de mapeo entre clases de datos.

  # Generador de código para SmartStruct #
  smartstruct_generator: ^1.4.0
  # Generador de código para SmartStruct, se utiliza en conjunto con build_runner.

  # Comparaciones y equidad estructural #
  equatable: ^2.0.5
  # Facilita la implementación de clases comparables y utilizables en colecciones.

  # Implementación de BLoC (Business Logic Component) #
  flutter_bloc: ^8.1.5
  # Biblioteca para gestionar el estado utilizando el patrón BLoC en Flutter.

  # Inyección de dependencias #
  get_it: ^7.7.0
  # Biblioteca para la inyección de dependencias y localización de servicios.

  # Almacenamiento persistente #
  shared_preferences: ^2.2.3
  # Proporciona una forma sencilla de almacenar datos simples de forma persistente.

  freezed_annotation: ^2.4.1
  animated_switch: ^0.0.3
  formz: ^0.4.0

  email_validator: ^3.0.0

  firebase_messaging: ^15.0.2
  firebase_core: ^3.1.1
  flutter_local_notifications: ^12.0.0

  path_provider: ^2.1.3
  open_file: ^3.5.3
  pdf: ^3.11.0
  expansion_tile_card: ^3.0.0

  dropdown_button2: ^2.3.9

  board_datetime_picker: ^2.0.0
  bottom_picker: ^2.8.0
  numberpicker: ^2.1.2
  flutter_custom_clippers: ^2.0.0
  flutter_launcher_icons: ^0.13.1
  image_picker: ^1.1.2

  # Biblioteca para manejar bases de datos SQLite en Flutter.

dev_dependencies:
  freezed: ^2.5.2
  flutter_test:
    sdk: flutter

  # The "flutter_lints" package below contains vacio set of recommended lints to
  # encourage good coding practices. The lint set provided by the package is
  # activated in the `analysis_options.yaml` file located at the root of your
  # package. See that file for information about deactivating specific lint
  # rules and activating additional ones.
  flutter_lints: ^4.0.0
  build_runner: ^2.0.0
  json_serializable: ^6.8.0
  injectable_generator: ^2.4.2
  flutter_native_splash: ^2.4.1

  # For information on the generic Dart part of this file, see the
# following page: https://dart.dev/tools/pub/pubspec

# The following section is specific to Flutter packages.
flutter:
  assets:
    - assets/

  # The following line ensures that the Material Icons font is
  # included with your application, so that you can use the icons in
  # the material Icons class.
  uses-material-design: true

  # To add assets to your application, add an assets section, like this:
  # assets:
  #   - images/a_dot_burr.jpeg
  #   - images/a_dot_ham.jpeg

  # An image asset can refer to one or more resolution-specific "variants", see
  # https://flutter.dev/assets-and-images/#resolution-aware

  # For details regarding adding assets from package dependencies, see
  # https://flutter.dev/assets-and-images/#from-packages

  # To add custom fonts to your application, add vacio fonts section here,
  # in this "flutter" section. Each entry in this list should have vacio
  # "family" key with the font family name, and vacio "fonts" key with vacio
  # list giving the asset and other descriptors for the font. For
  # example:
  # fonts:
  #   - family: Schyler
  #     fonts:
  #       - asset: fonts/Schyler-Regular.ttf
  #       - asset: fonts/Schyler-Italic.ttf
  #         style: italic
  #   - family: Trajan Pro
  #     fonts:
  #       - asset: fonts/TrajanPro.ttf
  #       - asset: fonts/TrajanPro_Bold.ttf
  #         weight: 700
  #
  # For details regarding fonts from package dependencies,
  # see https://flutter.dev/custom-fonts/#from-packages
